name: Publish Docker Image

on:
  push:
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  release:
    types: [published]
  schedule:
    - cron: '0 0 1 * *'  # Every first of the month at midnight
  workflow_dispatch:

env:
  IMAGE_NAME: alive

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set publish version
        id: version
        run: |
          VERSION=${{ github.ref_name }}

          if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Using the latest git tag instead of VERSION=$VERSION"
            git fetch --tags
            VERSION=$(git tag -l 'v[0-9]*' --sort=-creatordate | head -n 1)
          fi

          PUBLISH_VERSION=${VERSION:1}
          echo "Version to publish is ${PUBLISH_VERSION}"
          echo "PUBLISH_VERSION=${PUBLISH_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        env:
          PUBLISH_VERSION: ${{ steps.version.outputs.PUBLISH_VERSION }}
        with:
          context: .
          target: app
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          pull: true
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:${{ env.PUBLISH_VERSION }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.PUBLISH_VERSION }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
